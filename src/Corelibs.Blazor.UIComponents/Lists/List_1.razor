@using Corelibs.Basic.Collections;

<div class="vlist-card">

    <div class="list-title-panel">
        <div class="list-title-texts">
            @if (Title.IsOk())
            {
                <h4 class="list-title">@Title</h4>
            }
            @if (Description.IsOk())
            {
                <span class="list-description">@Description</span>
            }
        </div>
        @if (DropdownModel is not null)
        {
            <Dropdown Model=@DropdownModel OnOptionSelected=OnMenuOptionSelectedInternal>
                <TriggerComponent>
                    <BurgerButton />
                </TriggerComponent>
            </Dropdown>
        }
    </div>
    <div class="items">
        @foreach (var child in ListItems.Values)
        {
            <Item_1 Id=@child.Id Title=@child.Name DropdownModel=@ListItems.DropdownModel OnItemClick=OnItemClickInternal />
        }

    </div>

</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public Dropdown.OnOptionSelectedDelegate OnMenuOptionSelected { get; set; }
    [Parameter] public Item_1.OnItemClickDelegate? OnItemClick { get; set; }

    [Parameter] public Dropdown.ViewModel DropdownModel { get; set; } = _defaultDropdownModel;

    [Parameter] public List<Dropdown.Option> AdditionalDropdownOptions { get; set; }
    [Parameter] public ListItemsModel ListItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!AdditionalDropdownOptions.IsNullOrEmpty())
            DropdownModel.Options.AddRange(AdditionalDropdownOptions);
    }

    private async Task<bool> OnMenuOptionSelectedInternal(Dropdown.Option option)
    {
        if (option.Id is "add")
            ;

        return true;
    }

    private Task OnItemClickInternal(string id)
    {
        OnItemClick?.Invoke(id);
        return Task.CompletedTask;
    }

    private static readonly Dropdown.ViewModel _defaultDropdownModel = new(
        Options: new()
        {
            new("add", "Add"),
        },
        Trigger: new(IsFixed: true, Value: "Menu", Mode: Dropdown.Mode.Component)
    );

    public class ListItemsModel
    {
        public Dropdown.ViewModel DropdownModel { get; set; }
        public Func<string, Task> OnItemClick { get; set; }
        public List<ListItem> Values { get; set; }
    }

    public record ListItem(string Id, string Name);
}

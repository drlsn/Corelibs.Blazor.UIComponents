@inherits UIComponent

<nav class="sidemenu">
    <div class="menu-button menu-button-x" @onclick=@OnMenuButtonClick>
        <img class="menu-button-icon" src=@MenuIconUrl/>
    </div>
    <div class="sidemenu-content @_sidemenuContentAlwaysOnCssClass">
        <div class="sidemenu-logo-panel">
            <div class="sidemenu-logo-panel-bg"></div>
            <img class="logo-image" src=@LogoImageUrl />
            <span class="sidemenu-logo-name">@LogoName</span>
        </div>
        <div class="sidemenu-list">
            @foreach (var group in Model.MainButtonGroups)
            {
                <div class="button-group-container">
                    <span class="button-group-name">@group.Name</span>
                    <div class="button-group">
                        @foreach (var button in group.Buttons)
                        {
                            <div class="button-row" @onclick=@InvokeVoid(OnButtonClick, button.Id)>
                                <img class="button-icon" src=@button.IconUrl />
                                <span class="button-name">@button.Name</span>
                            </div>
                        }
                    </div>
                </div>
            }

            <div class="small-screen-button-groups">
                @foreach (var group in Model.OnlySmallScreenButtonGroups)
                {
                    <div class="button-group-container">
                        <span class="button-group-name">@group.Name</span>
                        <div class="button-group">
                            @foreach (var button in group.Buttons)
                            {
                                <div class="button-row">
                                    <img class="button-icon" src=@button.IconUrl />
                                    <span class="button-name">@button.Name</span>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</nav>

@code {
    public delegate Task OnButtonClickDelegate(string id);
    public delegate void OnSizeChangedDelegate(int size);

    [Parameter] public string LogoImageUrl { get; set; }
    [Parameter] public string LogoName { get; set; }
    [Parameter] public ViewModel Model { get; set; }
    [Parameter] public string MenuIconUrl { get; set; }
    [Parameter] public OnButtonClickDelegate OnButtonClick { get; set; }
    [Parameter] public OnSizeChangedDelegate OnSizeChanged { get; set; }

    private string _sidemenuContentAlwaysOnCssClass => IsMenuAlwaysActive ? "always-on" : "";

    public record ButtonGroup(string Name, Button[] Buttons);
    public record Button(string Id, string Name, string IconUrl);

    public bool IsMenuAlwaysActive { get; private set; }
    private void OnMenuButtonClick()
    {
        IsMenuAlwaysActive = !IsMenuAlwaysActive;

        int size = IsMenuAlwaysActive ? 225 : 0;
        OnSizeChanged?.Invoke(size);

        InvokeAsync(StateHasChanged);
    }

    public record ViewModel(
        ButtonGroup[] MainButtonGroups, 
        ButtonGroup[] OnlySmallScreenButtonGroups);
}
